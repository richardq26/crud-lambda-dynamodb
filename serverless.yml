service: crud-dynamodb-lambda

frameworkVersion: "3.1.0"

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:771872734022:table/TaskTable
# Este proyecto puede acceder a taskTable

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
          response:
            headers:
              Content-Type: application/json
  addTask:
    handler: src/addTask.addTask
    events:
      - httpApi:
          path: /tasks
          method: post
  getTasks:
    handler: src/getTasks.getTasks
    events:
      - httpApi:
          path: /tasks
          method: get
  getTask:
    handler: src/getTask.getTask
    events:
      - httpApi:
          path: /tasks/{id}
          method: get
  updateTask:
    handler: src/updateTask.updateTask
    events:
      - httpApi:
          path: /tasks/{id}
          method: put
resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TaskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

# Hash es indicar que es la primary key

plugins:
  - serverless-offline
